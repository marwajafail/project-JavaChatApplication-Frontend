{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marooy990\\\\jdi\\\\projects\\\\mini-project-JavaChatApplication\\\\chatApp\\\\react-chatApp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatRoom = () => {\n  _s();\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const [userData, setUserData] = useState({\n    username: '',\n    receivername: '',\n    connected: false,\n    message: '',\n    editing: null,\n    // For editing a message\n    editMessageContent: '' // For storing the content of the message being edited\n  });\n  useEffect(() => {\n    console.log('User data:', userData);\n  }, [userData]);\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:9092/ws'); // Ensure this matches your WebSocket endpoint\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      \"connected\": true\n    });\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    userJoin();\n  };\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: \"JOIN\"\n    };\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    console.log('Received message:', payloadData);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setPrivateChats(new Map(privateChats));\n        }\n        break;\n      case \"MESSAGE\":\n        setPublicChats(prevChats => [...prevChats, payloadData]);\n        break;\n      case \"EDITED\":\n        const updatedPublicChats = publicChats.map(chat => chat.id === payloadData.id ? payloadData : chat);\n        setPublicChats(updatedPublicChats);\n        break;\n      default:\n        break;\n    }\n  };\n  const onPrivateMessage = payload => {\n    var payloadData = JSON.parse(payload.body);\n    console.log('Received private message:', payloadData);\n    if (privateChats.get(payloadData.senderName)) {\n      privateChats.get(payloadData.senderName).push(payloadData);\n      setPrivateChats(new Map(privateChats));\n    } else {\n      let list = [];\n      list.push(payloadData);\n      privateChats.set(payloadData.senderName, list);\n      setPrivateChats(new Map(privateChats));\n    }\n  };\n  const onError = err => {\n    console.log('WebSocket error:', err);\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"message\": value\n    });\n  };\n  const handleEditMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"editMessageContent\": value\n    });\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const sendPrivateValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const handleUsername = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"username\": value\n    });\n  };\n  const registerUser = () => {\n    connect();\n  };\n  const startEditing = (messageId, messageContent) => {\n    setUserData({\n      ...userData,\n      editing: messageId,\n      editMessageContent: messageContent\n    });\n  };\n  const saveEditedMessage = () => {\n    if (stompClient && userData.editing) {\n      var updatedMessage = {\n        id: userData.editing,\n        senderName: userData.username,\n        message: userData.editMessageContent,\n        status: \"EDITED\"\n      };\n      console.log('Sending edited message:', updatedMessage);\n      stompClient.send(\"/app/edit-message\", {}, JSON.stringify(updatedMessage));\n      setUserData({\n        ...userData,\n        editing: null,\n        editMessageContent: ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(\"CHATROOM\");\n            },\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(name);\n            },\n            className: `member ${tab === name && \"active\"}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: userData.editing === chat.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: userData.editMessageContent,\n                  onChange: handleEditMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: saveEditedMessage,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 45\n              }, this) : chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 79\n            }, this), chat.senderName === userData.username && !userData.editing && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(chat.id, chat.message),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Enter your message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 44\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: userData.editing === chat.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: userData.editMessageContent,\n                  onChange: handleEditMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: saveEditedMessage,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 45\n              }, this) : chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 37\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 79\n            }, this), chat.senderName === userData.username && !userData.editing && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(chat.id, chat.message),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Enter your message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"Enter your name\",\n          name: \"userName\",\n          value: userData.username,\n          onChange: handleUsername,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: registerUser,\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"8qCGNQuwRi5rHsoU2WjfWs7wJnU=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","jsxDEV","_jsxDEV","stompClient","ChatRoom","_s","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","userData","setUserData","username","receivername","connected","message","editing","editMessageContent","console","log","connect","Sock","onConnected","onError","subscribe","onMessageReceived","onPrivateMessage","userJoin","chatMessage","senderName","status","send","JSON","stringify","payload","payloadData","parse","body","get","set","prevChats","updatedPublicChats","map","chat","id","push","list","err","handleMessage","event","value","target","handleEditMessage","sendValue","sendPrivateValue","receiverName","handleUsername","registerUser","startEditing","messageId","messageContent","saveEditedMessage","updatedMessage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","keys","name","index","type","onChange","placeholder","margin","_c","$RefreshReg$"],"sources":["C:/Users/marooy990/jdi/projects/mini-project-JavaChatApplication/chatApp/react-chatApp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { over } from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nvar stompClient = null;\r\n\r\nconst ChatRoom = () => {\r\n    const [privateChats, setPrivateChats] = useState(new Map());\r\n    const [publicChats, setPublicChats] = useState([]);\r\n    const [tab, setTab] = useState(\"CHATROOM\");\r\n    const [userData, setUserData] = useState({\r\n        username: '',\r\n        receivername: '',\r\n        connected: false,\r\n        message: '',\r\n        editing: null, // For editing a message\r\n        editMessageContent: '' // For storing the content of the message being edited\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log('User data:', userData);\r\n    }, [userData]);\r\n\r\n    const connect = () => {\r\n        let Sock = new SockJS('http://localhost:9092/ws'); // Ensure this matches your WebSocket endpoint\r\n        stompClient = over(Sock);\r\n        stompClient.connect({}, onConnected, onError);\r\n    }\r\n\r\n    const onConnected = () => {\r\n        setUserData({ ...userData, \"connected\": true });\r\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\r\n        stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\r\n        userJoin();\r\n    }\r\n\r\n    const userJoin = () => {\r\n        var chatMessage = {\r\n            senderName: userData.username,\r\n            status: \"JOIN\"\r\n        };\r\n        stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n    }\r\n\r\n    const onMessageReceived = (payload) => {\r\n        var payloadData = JSON.parse(payload.body);\r\n        console.log('Received message:', payloadData);\r\n        switch (payloadData.status) {\r\n            case \"JOIN\":\r\n                if (!privateChats.get(payloadData.senderName)) {\r\n                    privateChats.set(payloadData.senderName, []);\r\n                    setPrivateChats(new Map(privateChats));\r\n                }\r\n                break;\r\n            case \"MESSAGE\":\r\n                setPublicChats(prevChats => [...prevChats, payloadData]);\r\n                break;\r\n            case \"EDITED\":\r\n                const updatedPublicChats = publicChats.map(chat =>\r\n                    chat.id === payloadData.id ? payloadData : chat\r\n                );\r\n                setPublicChats(updatedPublicChats);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onPrivateMessage = (payload) => {\r\n        var payloadData = JSON.parse(payload.body);\r\n        console.log('Received private message:', payloadData);\r\n        if (privateChats.get(payloadData.senderName)) {\r\n            privateChats.get(payloadData.senderName).push(payloadData);\r\n            setPrivateChats(new Map(privateChats));\r\n        } else {\r\n            let list = [];\r\n            list.push(payloadData);\r\n            privateChats.set(payloadData.senderName, list);\r\n            setPrivateChats(new Map(privateChats));\r\n        }\r\n    }\r\n\r\n    const onError = (err) => {\r\n        console.log('WebSocket error:', err);\r\n    }\r\n\r\n    const handleMessage = (event) => {\r\n        const { value } = event.target;\r\n        setUserData({ ...userData, \"message\": value });\r\n    }\r\n\r\n    const handleEditMessage = (event) => {\r\n        const { value } = event.target;\r\n        setUserData({ ...userData, \"editMessageContent\": value });\r\n    }\r\n\r\n    const sendValue = () => {\r\n        if (stompClient) {\r\n            var chatMessage = {\r\n                senderName: userData.username,\r\n                message: userData.message,\r\n                status: \"MESSAGE\"\r\n            };\r\n            stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n            setUserData({ ...userData, \"message\": \"\" });\r\n        }\r\n    }\r\n\r\n    const sendPrivateValue = () => {\r\n        if (stompClient) {\r\n            var chatMessage = {\r\n                senderName: userData.username,\r\n                receiverName: tab,\r\n                message: userData.message,\r\n                status: \"MESSAGE\"\r\n            };\r\n            if (userData.username !== tab) {\r\n                privateChats.get(tab).push(chatMessage);\r\n                setPrivateChats(new Map(privateChats));\r\n            }\r\n            stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\r\n            setUserData({ ...userData, \"message\": \"\" });\r\n        }\r\n    }\r\n\r\n    const handleUsername = (event) => {\r\n        const { value } = event.target;\r\n        setUserData({ ...userData, \"username\": value });\r\n    }\r\n\r\n    const registerUser = () => {\r\n        connect();\r\n    }\r\n\r\n    const startEditing = (messageId, messageContent) => {\r\n        setUserData({ ...userData, editing: messageId, editMessageContent: messageContent });\r\n    }\r\n\r\n    const saveEditedMessage = () => {\r\n        if (stompClient && userData.editing) {\r\n            var updatedMessage = {\r\n                id: userData.editing,\r\n                senderName: userData.username,\r\n                message: userData.editMessageContent,\r\n                status: \"EDITED\"\r\n            };\r\n            console.log('Sending edited message:', updatedMessage);\r\n            stompClient.send(\"/app/edit-message\", {}, JSON.stringify(updatedMessage));\r\n            setUserData({ ...userData, editing: null, editMessageContent: '' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {userData.connected ?\r\n                <div className=\"chat-box\">\r\n                    <div className=\"member-list\">\r\n                        <ul>\r\n                            <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>Chatroom</li>\r\n                            {[...privateChats.keys()].map((name, index) => (\r\n                                <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n                        <ul className=\"chat-messages\">\r\n                            {publicChats.map((chat, index) => (\r\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\r\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\r\n                                    <div className=\"message-data\">\r\n                                        {userData.editing === chat.id ? (\r\n                                            <div>\r\n                                                <input type=\"text\" value={userData.editMessageContent} onChange={handleEditMessage} />\r\n                                                <button onClick={saveEditedMessage}>Save</button>\r\n                                            </div>\r\n                                        ) : (\r\n                                            chat.message\r\n                                        )}\r\n                                    </div>\r\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\r\n                                    {chat.senderName === userData.username && !userData.editing && (\r\n                                        <button onClick={() => startEditing(chat.id, chat.message)}>Edit</button>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <div className=\"send-message\">\r\n                            <input type=\"text\" className=\"input-message\" placeholder=\"Enter your message\" value={userData.message} onChange={handleMessage} />\r\n                            <button type=\"button\" className=\"send-button\" onClick={sendValue}>Send</button>\r\n                        </div>\r\n                    </div>}\r\n                    {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n                        <ul className=\"chat-messages\">\r\n                            {[...privateChats.get(tab)].map((chat, index) => (\r\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\r\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\r\n                                    <div className=\"message-data\">\r\n                                        {userData.editing === chat.id ? (\r\n                                            <div>\r\n                                                <input type=\"text\" value={userData.editMessageContent} onChange={handleEditMessage} />\r\n                                                <button onClick={saveEditedMessage}>Save</button>\r\n                                            </div>\r\n                                        ) : (\r\n                                            chat.message\r\n                                        )}\r\n                                    </div>\r\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\r\n                                    {chat.senderName === userData.username && !userData.editing && (\r\n                                        <button onClick={() => startEditing(chat.id, chat.message)}>Edit</button>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <div className=\"send-message\">\r\n                            <input type=\"text\" className=\"input-message\" placeholder=\"Enter your message\" value={userData.message} onChange={handleMessage} />\r\n                            <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Send</button>\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n                :\r\n                <div className=\"register\">\r\n                    <div className=\"register-box\">\r\n                        <input\r\n                            id=\"user-name\"\r\n                            placeholder=\"Enter your name\"\r\n                            name=\"userName\"\r\n                            value={userData.username}\r\n                            onChange={handleUsername}\r\n                            margin=\"normal\"\r\n                        />\r\n                        <button type=\"button\" onClick={registerUser}>\r\n                            Connect\r\n                        </button>\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}