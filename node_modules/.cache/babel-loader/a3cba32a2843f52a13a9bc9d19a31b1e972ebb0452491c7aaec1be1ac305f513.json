{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marooy990\\\\jdi\\\\projects\\\\mini-project-JavaChatApplication\\\\chatApp\\\\react-chatApp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet stompClient = null;\nconst ChatRoom = () => {\n  _s();\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const [userData, setUserData] = useState({\n    username: '',\n    receivername: '',\n    connected: false,\n    message: '',\n    editing: null,\n    editMessageContent: ''\n  });\n  useEffect(() => {\n    if (userData.connected) {\n      connect();\n    }\n  }, [userData.connected]);\n  const connect = () => {\n    const Sock = new SockJS('http://localhost:9092/ws'); // Ensure this matches your WebSocket endpoint\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    setUserData(prev => ({\n      ...prev,\n      connected: true\n    }));\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    userJoin();\n  };\n  const userJoin = () => {\n    const chatMessage = {\n      senderName: userData.username,\n      status: \"JOIN\"\n    };\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n  };\n  const onMessageReceived = payload => {\n    const payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setPrivateChats(new Map(privateChats));\n        }\n        break;\n      case \"MESSAGE\":\n        setPublicChats(prevChats => [...prevChats, payloadData]);\n        break;\n      case \"EDITED\":\n        const updatedPublicChats = publicChats.map(chat => chat.id === payloadData.id ? payloadData : chat);\n        setPublicChats(updatedPublicChats);\n        if (privateChats.has(payloadData.senderName)) {\n          const updatedPrivateChats = privateChats.get(payloadData.senderName).map(chat => chat.id === payloadData.id ? payloadData : chat);\n          privateChats.set(payloadData.senderName, updatedPrivateChats);\n          setPrivateChats(new Map(privateChats));\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  const onPrivateMessage = payload => {\n    const payloadData = JSON.parse(payload.body);\n    const userChats = privateChats.get(payloadData.senderName) || [];\n    userChats.push(payloadData);\n    privateChats.set(payloadData.senderName, userChats);\n    setPrivateChats(new Map(privateChats));\n  };\n  const onError = err => {\n    console.log('WebSocket error:', err);\n    alert('Failed to connect to WebSocket. Please try again later.');\n  };\n  const handleMessage = event => {\n    setUserData(prev => ({\n      ...prev,\n      message: event.target.value\n    }));\n  };\n  const handleEditMessage = event => {\n    setUserData(prev => ({\n      ...prev,\n      editMessageContent: event.target.value\n    }));\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      const chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n      setUserData(prev => ({\n        ...prev,\n        message: \"\"\n      }));\n    }\n  };\n  const sendPrivateValue = () => {\n    if (stompClient) {\n      const chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      if (userData.username !== tab) {\n        const userChats = privateChats.get(tab) || [];\n        userChats.push(chatMessage);\n        privateChats.set(tab, userChats);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n      setUserData(prev => ({\n        ...prev,\n        message: \"\"\n      }));\n    }\n  };\n  const handleUsername = event => {\n    setUserData(prev => ({\n      ...prev,\n      username: event.target.value\n    }));\n  };\n  const registerUser = () => {\n    connect();\n  };\n  const startEditing = (messageId, messageContent) => {\n    setUserData(prev => ({\n      ...prev,\n      editing: messageId,\n      editMessageContent: messageContent\n    }));\n  };\n  const saveEditedMessage = () => {\n    if (stompClient && userData.editing) {\n      const updatedMessage = {\n        id: userData.editing,\n        senderName: userData.username,\n        message: userData.editMessageContent,\n        status: \"EDITED\"\n      };\n      stompClient.send(\"/app/edit-message\", {}, JSON.stringify(updatedMessage));\n      const updatedPublicChats = publicChats.map(chat => chat.id === userData.editing ? {\n        ...chat,\n        message: userData.editMessageContent,\n        lastModified: new Date()\n      } : chat);\n      setPublicChats(updatedPublicChats);\n      if (privateChats.has(tab)) {\n        const updatedPrivateChats = privateChats.get(tab).map(chat => chat.id === userData.editing ? {\n          ...chat,\n          message: userData.editMessageContent,\n          lastModified: new Date()\n        } : chat);\n        privateChats.set(tab, updatedPrivateChats);\n        setPrivateChats(new Map(privateChats));\n      }\n      setUserData(prev => ({\n        ...prev,\n        editing: null,\n        editMessageContent: ''\n      }));\n    }\n  };\n  const cancelEditing = () => {\n    setUserData(prev => ({\n      ...prev,\n      editing: null,\n      editMessageContent: ''\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setTab(\"CHATROOM\"),\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setTab(name),\n            className: `member ${tab === name && \"active\"}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: userData.editing === chat.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: userData.editMessageContent,\n                  onChange: handleEditMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: saveEditedMessage,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: cancelEditing,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: chat.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timestamp\",\n                  children: chat.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 79\n            }, this), chat.senderName === userData.username && !userData.editing && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(chat.id, chat.message),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Enter your message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 44\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...(privateChats.get(tab) || [])].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: userData.editing === chat.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: userData.editMessageContent,\n                  onChange: handleEditMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: saveEditedMessage,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: cancelEditing,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: chat.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timestamp\",\n                  children: chat.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 79\n            }, this), chat.senderName === userData.username && !userData.editing && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(chat.id, chat.message),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Enter your message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        onChange: handleUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registerUser,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"HSa7qO4Pgl2TqDNIZi+CtkldO58=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","jsxDEV","_jsxDEV","stompClient","ChatRoom","_s","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","userData","setUserData","username","receivername","connected","message","editing","editMessageContent","connect","Sock","onConnected","onError","prev","subscribe","onMessageReceived","onPrivateMessage","userJoin","chatMessage","senderName","status","send","JSON","stringify","payload","payloadData","parse","body","get","set","prevChats","updatedPublicChats","map","chat","id","has","updatedPrivateChats","userChats","push","err","console","log","alert","handleMessage","event","target","value","handleEditMessage","sendValue","sendPrivateValue","receiverName","handleUsername","registerUser","startEditing","messageId","messageContent","saveEditedMessage","updatedMessage","lastModified","Date","cancelEditing","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","keys","name","index","type","onChange","timestamp","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/marooy990/jdi/projects/mini-project-JavaChatApplication/chatApp/react-chatApp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { over } from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nlet stompClient = null;\r\n\r\nconst ChatRoom = () => {\r\n    const [privateChats, setPrivateChats] = useState(new Map());\r\n    const [publicChats, setPublicChats] = useState([]);\r\n    const [tab, setTab] = useState(\"CHATROOM\");\r\n    const [userData, setUserData] = useState({\r\n        username: '',\r\n        receivername: '',\r\n        connected: false,\r\n        message: '',\r\n        editing: null,\r\n        editMessageContent: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (userData.connected) {\r\n            connect();\r\n        }\r\n    }, [userData.connected]);\r\n\r\n    const connect = () => {\r\n        const Sock = new SockJS('http://localhost:9092/ws'); // Ensure this matches your WebSocket endpoint\r\n        stompClient = over(Sock);\r\n        stompClient.connect({}, onConnected, onError);\r\n    }\r\n\r\n    const onConnected = () => {\r\n        setUserData(prev => ({ ...prev, connected: true }));\r\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\r\n        stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\r\n        userJoin();\r\n    }\r\n\r\n    const userJoin = () => {\r\n        const chatMessage = {\r\n            senderName: userData.username,\r\n            status: \"JOIN\"\r\n        };\r\n        stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n    }\r\n\r\n    const onMessageReceived = (payload) => {\r\n        const payloadData = JSON.parse(payload.body);\r\n        switch (payloadData.status) {\r\n            case \"JOIN\":\r\n                if (!privateChats.get(payloadData.senderName)) {\r\n                    privateChats.set(payloadData.senderName, []);\r\n                    setPrivateChats(new Map(privateChats));\r\n                }\r\n                break;\r\n            case \"MESSAGE\":\r\n                setPublicChats(prevChats => [...prevChats, payloadData]);\r\n                break;\r\n            case \"EDITED\":\r\n                const updatedPublicChats = publicChats.map(chat =>\r\n                    chat.id === payloadData.id ? payloadData : chat\r\n                );\r\n                setPublicChats(updatedPublicChats);\r\n\r\n                if (privateChats.has(payloadData.senderName)) {\r\n                    const updatedPrivateChats = privateChats.get(payloadData.senderName).map(chat =>\r\n                        chat.id === payloadData.id ? payloadData : chat\r\n                    );\r\n                    privateChats.set(payloadData.senderName, updatedPrivateChats);\r\n                    setPrivateChats(new Map(privateChats));\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onPrivateMessage = (payload) => {\r\n        const payloadData = JSON.parse(payload.body);\r\n        const userChats = privateChats.get(payloadData.senderName) || [];\r\n        userChats.push(payloadData);\r\n        privateChats.set(payloadData.senderName, userChats);\r\n        setPrivateChats(new Map(privateChats));\r\n    }\r\n\r\n    const onError = (err) => {\r\n        console.log('WebSocket error:', err);\r\n        alert('Failed to connect to WebSocket. Please try again later.');\r\n    }\r\n\r\n    const handleMessage = (event) => {\r\n        setUserData(prev => ({ ...prev, message: event.target.value }));\r\n    }\r\n\r\n    const handleEditMessage = (event) => {\r\n        setUserData(prev => ({ ...prev, editMessageContent: event.target.value }));\r\n    }\r\n\r\n    const sendValue = () => {\r\n        if (stompClient) {\r\n            const chatMessage = {\r\n                senderName: userData.username,\r\n                message: userData.message,\r\n                status: \"MESSAGE\"\r\n            };\r\n            stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n            setUserData(prev => ({ ...prev, message: \"\" }));\r\n        }\r\n    }\r\n\r\n    const sendPrivateValue = () => {\r\n        if (stompClient) {\r\n            const chatMessage = {\r\n                senderName: userData.username,\r\n                receiverName: tab,\r\n                message: userData.message,\r\n                status: \"MESSAGE\"\r\n            };\r\n            if (userData.username !== tab) {\r\n                const userChats = privateChats.get(tab) || [];\r\n                userChats.push(chatMessage);\r\n                privateChats.set(tab, userChats);\r\n                setPrivateChats(new Map(privateChats));\r\n            }\r\n            stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\r\n            setUserData(prev => ({ ...prev, message: \"\" }));\r\n        }\r\n    }\r\n\r\n    const handleUsername = (event) => {\r\n        setUserData(prev => ({ ...prev, username: event.target.value }));\r\n    }\r\n\r\n    const registerUser = () => {\r\n        connect();\r\n    }\r\n\r\n    const startEditing = (messageId, messageContent) => {\r\n        setUserData(prev => ({ ...prev, editing: messageId, editMessageContent: messageContent }));\r\n    }\r\n\r\n    const saveEditedMessage = () => {\r\n        if (stompClient && userData.editing) {\r\n            const updatedMessage = {\r\n                id: userData.editing,\r\n                senderName: userData.username,\r\n                message: userData.editMessageContent,\r\n                status: \"EDITED\"\r\n            };\r\n            stompClient.send(\"/app/edit-message\", {}, JSON.stringify(updatedMessage));\r\n\r\n            const updatedPublicChats = publicChats.map(chat =>\r\n                chat.id === userData.editing ? { ...chat, message: userData.editMessageContent, lastModified: new Date() } : chat\r\n            );\r\n            setPublicChats(updatedPublicChats);\r\n\r\n            if (privateChats.has(tab)) {\r\n                const updatedPrivateChats = privateChats.get(tab).map(chat =>\r\n                    chat.id === userData.editing ? { ...chat, message: userData.editMessageContent, lastModified: new Date() } : chat\r\n                );\r\n                privateChats.set(tab, updatedPrivateChats);\r\n                setPrivateChats(new Map(privateChats));\r\n            }\r\n\r\n            setUserData(prev => ({ ...prev, editing: null, editMessageContent: '' }));\r\n        }\r\n    }\r\n\r\n    const cancelEditing = () => {\r\n        setUserData(prev => ({ ...prev, editing: null, editMessageContent: '' }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {userData.connected ?\r\n                <div className=\"chat-box\">\r\n                    <div className=\"member-list\">\r\n                        <ul>\r\n                            <li onClick={() => setTab(\"CHATROOM\")} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>Chatroom</li>\r\n                            {[...privateChats.keys()].map((name, index) => (\r\n                                <li onClick={() => setTab(name)} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n                        <ul className=\"chat-messages\">\r\n                            {publicChats.map((chat, index) => (\r\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\r\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\r\n                                    <div className=\"message-data\">\r\n                                        {userData.editing === chat.id ? (\r\n                                            <div>\r\n                                                <input type=\"text\" value={userData.editMessageContent} onChange={handleEditMessage} />\r\n                                                <button onClick={saveEditedMessage}>Save</button>\r\n                                                <button onClick={cancelEditing}>Cancel</button>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div>\r\n                                                <div>{chat.message}</div>\r\n                                                <div className=\"timestamp\">{chat.timestamp}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\r\n                                    {chat.senderName === userData.username && !userData.editing && (\r\n                                        <button onClick={() => startEditing(chat.id, chat.message)}>Edit</button>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <div className=\"send-message\">\r\n                            <input type=\"text\" className=\"input-message\" placeholder=\"Enter your message\" value={userData.message} onChange={handleMessage} />\r\n                            <button type=\"button\" className=\"send-button\" onClick={sendValue}>Send</button>\r\n                        </div>\r\n                    </div>}\r\n                    {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n                        <ul className=\"chat-messages\">\r\n                            {[...privateChats.get(tab) || []].map((chat, index) => (\r\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\r\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\r\n                                    <div className=\"message-data\">\r\n                                        {userData.editing === chat.id ? (\r\n                                            <div>\r\n                                                <input type=\"text\" value={userData.editMessageContent} onChange={handleEditMessage} />\r\n                                                <button onClick={saveEditedMessage}>Save</button>\r\n                                                <button onClick={cancelEditing}>Cancel</button>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div>\r\n                                                <div>{chat.message}</div>\r\n                                                <div className=\"timestamp\">{chat.timestamp}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\r\n                                    {chat.senderName === userData.username && !userData.editing && (\r\n                                        <button onClick={() => startEditing(chat.id, chat.message)}>Edit</button>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <div className=\"send-message\">\r\n                            <input type=\"text\" className=\"input-message\" placeholder=\"Enter your message\" value={userData.message} onChange={handleMessage} />\r\n                            <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Send</button>\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n                :\r\n                <div className=\"connect-form\">\r\n                    <input type=\"text\" placeholder=\"Enter your name\" onChange={handleUsername} />\r\n                    <button onClick={registerUser}>Connect</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}